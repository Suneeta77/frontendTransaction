{"ast":null,"code":"import express from \"express\";\nimport { deleteTrans, getUserTrans, insertTrans } from \"../models/transacton/TransModel.js\";\nimport { userAuth } from \"../middleware/authMiddleware.js\";\nconst router = express.Router();\n\n// insert transaction\nrouter.post(\"/\", userAuth, async (req, res) => {\n  try {\n    // call model for query\n    const result = await insertTrans({\n      ...req.body,\n      userId: req.userId\n    });\n    result !== null && result !== void 0 && result._id ? res.json({\n      status: \"success\",\n      message: \"Transaction has been added successfully\"\n    }) : res.json({\n      status: \"error\",\n      message: \"Unable to add the transaction, please try again later\"\n    });\n  } catch (error) {\n    res.json({\n      stauts: \"error\",\n      message: error.message\n    });\n  }\n});\n\n// get all transaction for specific user only\nrouter.get(\"/\", userAuth, async (req, res, next) => {\n  try {\n    const transList = await getUserTrans(req.userId);\n    res.json({\n      status: \"success\",\n      message: \"here are the list\",\n      transList\n    });\n  } catch (error) {\n    next(error);\n  }\n});\n\n// delete transactions\nrouter.delete(\"/\", userAuth, async (req, res, next) => {\n  try {\n    const {\n      userId,\n      body\n    } = req;\n    const result = await deleteTrans(userId, body);\n    result.deletedCount ? res.json({\n      status: \"success\",\n      message: `${result.deletedCount} transactions has been deleted`\n    }) : res.json({\n      status: \"error\",\n      message: `Unable to delete the trnassactions, please try agian later`\n    });\n  } catch (error) {\n    next(error);\n  }\n});\nexport default router;","map":{"version":3,"names":["express","deleteTrans","getUserTrans","insertTrans","userAuth","router","Router","post","req","res","result","body","userId","_id","json","status","message","error","stauts","get","next","transList","delete","deletedCount"],"sources":["/Users/suneetathapa/Downloads/14-11-2023 trans fullstack/client/src/components/TransTable.js"],"sourcesContent":["import express from \"express\";\nimport {\n  deleteTrans,\n  getUserTrans,\n  insertTrans,\n} from \"../models/transacton/TransModel.js\";\nimport { userAuth } from \"../middleware/authMiddleware.js\";\nconst router = express.Router();\n\n// insert transaction\nrouter.post(\"/\", userAuth, async (req, res) => {\n  try {\n    // call model for query\n    const result = await insertTrans({ ...req.body, userId: req.userId });\n\n    result?._id\n      ? res.json({\n          status: \"success\",\n          message: \"Transaction has been added successfully\",\n        })\n      : res.json({\n          status: \"error\",\n          message: \"Unable to add the transaction, please try again later\",\n        });\n  } catch (error) {\n    res.json({\n      stauts: \"error\",\n      message: error.message,\n    });\n  }\n});\n\n// get all transaction for specific user only\nrouter.get(\"/\", userAuth, async (req, res, next) => {\n  try {\n    const transList = await getUserTrans(req.userId);\n    res.json({\n      status: \"success\",\n      message: \"here are the list\",\n      transList,\n    });\n  } catch (error) {\n    next(error);\n  }\n});\n\n// delete transactions\nrouter.delete(\"/\", userAuth, async (req, res, next) => {\n  try {\n    const { userId, body } = req;\n    const result = await deleteTrans(userId, body);\n\n    result.deletedCount\n      ? res.json({\n          status: \"success\",\n          message: `${result.deletedCount} transactions has been deleted`,\n        })\n      : res.json({\n          status: \"error\",\n          message: `Unable to delete the trnassactions, please try agian later`,\n        });\n  } catch (error) {\n    next(error);\n  }\n});\n\nexport default router;\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,SAAS;AAC7B,SACEC,WAAW,EACXC,YAAY,EACZC,WAAW,QACN,oCAAoC;AAC3C,SAASC,QAAQ,QAAQ,iCAAiC;AAC1D,MAAMC,MAAM,GAAGL,OAAO,CAACM,MAAM,CAAC,CAAC;;AAE/B;AACAD,MAAM,CAACE,IAAI,CAAC,GAAG,EAAEH,QAAQ,EAAE,OAAOI,GAAG,EAAEC,GAAG,KAAK;EAC7C,IAAI;IACF;IACA,MAAMC,MAAM,GAAG,MAAMP,WAAW,CAAC;MAAE,GAAGK,GAAG,CAACG,IAAI;MAAEC,MAAM,EAAEJ,GAAG,CAACI;IAAO,CAAC,CAAC;IAErEF,MAAM,aAANA,MAAM,eAANA,MAAM,CAAEG,GAAG,GACPJ,GAAG,CAACK,IAAI,CAAC;MACPC,MAAM,EAAE,SAAS;MACjBC,OAAO,EAAE;IACX,CAAC,CAAC,GACFP,GAAG,CAACK,IAAI,CAAC;MACPC,MAAM,EAAE,OAAO;MACfC,OAAO,EAAE;IACX,CAAC,CAAC;EACR,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdR,GAAG,CAACK,IAAI,CAAC;MACPI,MAAM,EAAE,OAAO;MACfF,OAAO,EAAEC,KAAK,CAACD;IACjB,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;;AAEF;AACAX,MAAM,CAACc,GAAG,CAAC,GAAG,EAAEf,QAAQ,EAAE,OAAOI,GAAG,EAAEC,GAAG,EAAEW,IAAI,KAAK;EAClD,IAAI;IACF,MAAMC,SAAS,GAAG,MAAMnB,YAAY,CAACM,GAAG,CAACI,MAAM,CAAC;IAChDH,GAAG,CAACK,IAAI,CAAC;MACPC,MAAM,EAAE,SAAS;MACjBC,OAAO,EAAE,mBAAmB;MAC5BK;IACF,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACdG,IAAI,CAACH,KAAK,CAAC;EACb;AACF,CAAC,CAAC;;AAEF;AACAZ,MAAM,CAACiB,MAAM,CAAC,GAAG,EAAElB,QAAQ,EAAE,OAAOI,GAAG,EAAEC,GAAG,EAAEW,IAAI,KAAK;EACrD,IAAI;IACF,MAAM;MAAER,MAAM;MAAED;IAAK,CAAC,GAAGH,GAAG;IAC5B,MAAME,MAAM,GAAG,MAAMT,WAAW,CAACW,MAAM,EAAED,IAAI,CAAC;IAE9CD,MAAM,CAACa,YAAY,GACfd,GAAG,CAACK,IAAI,CAAC;MACPC,MAAM,EAAE,SAAS;MACjBC,OAAO,EAAG,GAAEN,MAAM,CAACa,YAAa;IAClC,CAAC,CAAC,GACFd,GAAG,CAACK,IAAI,CAAC;MACPC,MAAM,EAAE,OAAO;MACfC,OAAO,EAAG;IACZ,CAAC,CAAC;EACR,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdG,IAAI,CAACH,KAAK,CAAC;EACb;AACF,CAAC,CAAC;AAEF,eAAeZ,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}