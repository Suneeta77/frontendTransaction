{"ast":null,"code":"import axios from \"axios\";\nconst rootAPI = process.env.REACT_APP_ROOTAPI;\nconst userApi = rootAPI + \"/user\";\nconst transApi = rootAPI + \"/transaction\";\nconst getUserId = () => {\n  const userJson = sessionStorage.getItem(\"user\");\n  const userObj = JSON.parse(userJson);\n  return (userObj === null || userObj === void 0 ? void 0 : userObj._id) || null;\n};\n\n// ============= user api\n\nexport const postUser = async userObj => {\n  try {\n    const {\n      data\n    } = await axios.post(userApi, userObj);\n    return data;\n  } catch (error) {\n    return {\n      status: \"error\",\n      mesage: error.message\n    };\n  }\n};\n\n//login user\nexport const loginUser = async userObj => {\n  try {\n    const {\n      data\n    } = await axios.post(userApi + \"/login\", userObj);\n    return data;\n  } catch (error) {\n    return {\n      status: \"error\",\n      mesage: error.message\n    };\n  }\n};\n\n// ============= transaction api\n\nexport const postTrans = async transObj => {\n  try {\n    const userId = getUserId();\n    if (!userId) {\n      return {\n        status: \"error\",\n        message: \"userId not foud, log out and log in again.\"\n      };\n    }\n    const {\n      data\n    } = await axios.post(transApi, transObj, {\n      headers: {\n        Authorization: userId\n      }\n    });\n    return data;\n  } catch (error) {\n    return {\n      status: \"error\",\n      mesage: error.message\n    };\n  }\n};\nexport const getTrans = async () => {\n  try {\n    const userId = getUserId();\n    if (!userId) {\n      return {\n        status: \"error\",\n        message: \"userId not found, log out and log in again.\"\n      };\n    }\n    const {\n      data\n    } = await axios.get(transApi, {\n      headers: {\n        Authorization: userId\n      }\n    });\n    return data;\n  } catch (error) {\n    return {\n      status: \"error\",\n      mesage: error.message\n    };\n  }\n};\nexport const deleteTrans = async idArg => {\n  try {\n    const userId = getUserId();\n    if (!userId) {\n      return {\n        status: \"error\",\n        message: \"userId not found, log out and log in again.\"\n      };\n    }\n    const {\n      data\n    } = await axios.delete(transApi, {\n      data: idArg,\n      headers: {\n        Authorization: userId\n      }\n    });\n    return data;\n  } catch (error) {\n    return {\n      status: \"error\",\n      mesage: error.message\n    };\n  }\n};","map":{"version":3,"names":["axios","rootAPI","process","env","REACT_APP_ROOTAPI","userApi","transApi","getUserId","userJson","sessionStorage","getItem","userObj","JSON","parse","_id","postUser","data","post","error","status","mesage","message","loginUser","postTrans","transObj","userId","headers","Authorization","getTrans","get","deleteTrans","idArg","delete"],"sources":["/Users/suneetathapa/Downloads/14-11-2023 trans fullstack/client/src/helper/axiosHelper.js"],"sourcesContent":["import axios from \"axios\";\n\nconst rootAPI = process.env.REACT_APP_ROOTAPI;\nconst userApi = rootAPI + \"/user\";\nconst transApi = rootAPI + \"/transaction\";\n\nconst getUserId = () => {\n  const userJson = sessionStorage.getItem(\"user\");\n  const userObj = JSON.parse(userJson);\n  return userObj?._id || null;\n};\n\n// ============= user api\n\nexport const postUser = async (userObj) => {\n  try {\n    const { data } = await axios.post(userApi, userObj);\n\n    return data;\n  } catch (error) {\n    return {\n      status: \"error\",\n      mesage: error.message,\n    };\n  }\n};\n\n//login user\nexport const loginUser = async (userObj) => {\n  try {\n    const { data } = await axios.post(userApi + \"/login\", userObj);\n\n    return data;\n  } catch (error) {\n    return {\n      status: \"error\",\n      mesage: error.message,\n    };\n  }\n};\n\n// ============= transaction api\n\nexport const postTrans = async (transObj) => {\n  try {\n    const userId = getUserId();\n    if (!userId) {\n      return {\n        status: \"error\",\n        message: \"userId not foud, log out and log in again.\",\n      };\n    }\n    const { data } = await axios.post(transApi, transObj, {\n      headers: {\n        Authorization: userId,\n      },\n    });\n\n    return data;\n  } catch (error) {\n    return {\n      status: \"error\",\n      mesage: error.message,\n    };\n  }\n};\n\nexport const getTrans = async () => {\n  try {\n    const userId = getUserId();\n    if (!userId) {\n      return {\n        status: \"error\",\n        message: \"userId not found, log out and log in again.\",\n      };\n    }\n    const { data } = await axios.get(transApi, {\n      headers: {\n        Authorization: userId,\n      },\n    });\n\n    return data;\n  } catch (error) {\n    return {\n      status: \"error\",\n      mesage: error.message,\n    };\n  }\n};\n\nexport const deleteTrans = async (idArg) => {\n  try {\n    const userId = getUserId();\n    if (!userId) {\n      return {\n        status: \"error\",\n        message: \"userId not found, log out and log in again.\",\n      };\n    }\n    const { data } = await axios.delete(transApi, {\n      data: idArg,\n\n      headers: {\n        Authorization: userId,\n      },\n    });\n\n    return data;\n  } catch (error) {\n    return {\n      status: \"error\",\n      mesage: error.message,\n    };\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}